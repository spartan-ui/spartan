name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: yarn install --frozen-lockfile
      - run: yarn test:coverage
      - run: yarn codecov -t $CODECOV_TOKEN
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    if: contains(github.ref, 'master') && !contains(github.event.head_commit.message, '[ci skip]')
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Git identity
        run: |
          git config --local user.name 'spartan-ui [bot]'
          git config --local user.email 'bot@spartan-ui.dev'
          git remote set-url origin https://spartan-ui-bot:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Publish all packages with Lerna
        run: yarn release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
